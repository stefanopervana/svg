<p className="it">Originalmente, las propiedades de CSS específica que se necesita para ser envuelto en su propio objeto y aprobada en igual <code>TweenLite.to(element, 1, {css:{left:"100px", top:"50px"}});</code>forma que el motor podría discernir que esas propiedades deben ser manejados por CSSPlugin, pero debido a la animación de los elementos DOM en el navegador es tan común, TweenLite y TweenMax (como se de la versión 1.8.0) comprobar automáticamente si el objetivo es un elemento DOM y si es así, se crea ese objeto css para usted y cambia las propiedades que no están reservadas (como <code>onComplete</code>, <code>ease</code>, <code>delay</code>, etc, o plugin de palabras clave como <code>scrollTo</code>, <code>raphael</code>, <code>easel</code>, etc.) en ese objeto css cuando la interpolación hace por primera vez. En los ejemplos de código siguientes, usaremos el estilo más conciso que omite el <code>css:{}</code>objeto, sino ser conscientes de que cualquiera de los estilos es aceptable.</p>
<p className="it">No olvide que es necesario cargar el archivo JavaScript del plugin para asegurarse de que funciona. Para mayor comodidad, los principales plugins como CSSPlugin, RoundPropsPlugin y BezierPlugin se incluyen <strong>dentro</strong> del archivo TweenMax JavaScript.<a name="css"></a></p>
<p className="it">Con la ayuda de la CSSPlugin, <strong>GSAP puede animar casi cualquier propiedad relacionados con CSS</strong> de los elementos DOM incluyendo las cosas obvias como <code>width</code>, <code>height</code>, <code>margins</code>, <code>padding</code>, <code>top</code>, <code>left</code>, y más, más complejas propiedades como las transformadas ( <code>rotation</code>, <code>scaleX</code>, <code>scaleY</code>, <code>skewX</code>, <code>skewY</code>, <code>x</code>, <code>y</code>, <code>xPercent</code>, <code>yPercent</code>, <code>rotationX</code>, y <code>rotationY</code>) , colores, <code>backgroundPosition</code>, <code>opacity</code>, y mucho más. Cargar el archivo de la CSSPlugin js para permitir estas capacidades. <em><strong>Nota:</strong> un error común es que se olvide de utilizar representaciones de casos camello de las propiedades, así que en vez de <code>font-size</code>, tendrá que utilizar <code>fontSize</code>. <code>background-color</code>sería <code>backgroundColor</code>. </em>Incluso puede definir propiedades que no son generalmente de interpolación y GSAP se aplicará la propiedad para usted (como <code>position:"absolute"</code>o <code>borderStyle:"solid"</code>). Por lo general es una buena idea para definir una unidad de medida (como "24px" en lugar de "24" o "50%" en lugar de "50"), pero el valor por defecto en la mayoría de los casos es píxeles (px), por lo que se puede omitir el unidad, si lo prefiere. E incluso si la unidad de medida no coincide con la actual, GSAP intentará convertir para usted. Así, por ejemplo, puede interpolar una anchura de "50%" a "200px". CSSPlugin incluso puede animar valores complejos como <code>boxShadow:"0px 0px 20px 20px red"</code>y <code>borderRadius:"50% 50%"</code>y <code>border:"5px solid rgb(0,255,0)"</code>. Cuando sea necesario, se intenta averiguar si la propiedad necesita un <strong>prefijo de proveedor</strong> y lo aplica en consecuencia. Puede haber un pequeño subconjunto de las propiedades CSS complejas o con efectos de iluminación que CSSPlugin no puede manejar aún, pero la gran mayoría trabaja muy bien. Además de la casi totalidad de las propiedades CSS estandar, CSSPlugin reconoce algunos especiales que pueden ser muy conveniente:</p>
<p className="it">Por defecto, la rotación, skewX y grados de uso skewY pero se puede usar radianes, si lo prefiere. Simplemente añada uno de los sufijos estándar ( "rad" o "grados") como este:</p>
<p className="it">Para ser claros, esto es como el establecimiento de CSS del elemento <code>transform:rotate(1.25rad) skewX(30deg)</code>junto con todos los otros valores del navegador IE prefijo y filtro de lo que sería mucho más detallado.</p>
<p className="it"> <a href="/css3/"><img style="margin-right: 8px; float: left;" src="/wp-content/uploads/custom/getting-started/img/css3_thumbnail.jpg" alt="" width="135" height="88"></a><a href="/css3/" target="_blank">Vea algunos ejemplos interactivos de 3D transforma y otras animaciones de propiedad CSS3</a> como boxShadow, textShadow, borderRadius, y el clip en <a href="/css3/" target="_blank">este artículo</a> . Demuestra principios perspectiva también. Para conseguir sus elementos para tener una verdadera perspectiva visual 3D aplicada, debe establecer el <strong>"punto de vista"</strong> la propiedad del elemento padre o establecer el especial "transformPerspective" del propio elemento (valores comunes van desde alrededor de 200 a 1000, más baja es la número más fuerte es la distorsión de la perspectiva). El "transformPerspective" es como añadir un <code>perspective()</code>directamente dentro de la CSS "transformar" estilo, como: <code>transform:perspective(500px) rotateX(45deg)</code>que sólo se aplica a ese elemento específico, mientras que si quieres un grupo de elementos de compartir una perspectiva común (el mismo punto de fuga), se debe configurar el regular de la propiedad "perspectiva" en la que el padre / contenedor de esos elementos. Para obtener más información acerca de la perspectiva, consulte <a href="http://desandro.github.com/3dtransforms/docs/perspective.html" target="_blank">este artículo</a> .</p>
<p className="it">En CSS regular, el orden en que se enumeran los asuntos transforma pero GSAP siempre las aplica en el mismo orden para mantener la coherencia: la escala, entonces la rotación (igual que rotationZ), entonces rotationY, entonces rotationX, a continuación, la traducción (x, y, z). Si desea girar el elemento en torno a un punto en el espacio 3D que no sea su centro, utilice la <code>transformOrigin</code>propiedad (véase más adelante).</p>
<p className="it"> <i><strong>Notas sobre 3D transforma:</strong></i></p>
<p className="it"> El primer valor de las cotizaciones se refiere al eje X y el segundo se refiere al eje Y (se puede añadir opcionalmente un tercio valor para definir un punto en el espacio 3D), así que para el objeto de transformar todo exactamente 50px desde su 20 píxeles del borde y de su borde superior izquierdo, se puede hacer: </p>
<p className="it"><i>Antes de la versión 1.9.0, directionalRotation fue llamado shortRotation y sólo maneja va en la dirección más corta. La nueva funcionalidad directionalRotation es mucho más flexible y fácil de usar (sólo una palmada a un sufijo en la propiedad regular). Por razones de compatibilidad hacia atrás, CSSPlugin todavía reconoce "shortRotation", pero ya no se utiliza.</i></p>
<p className="it">Y si desea agregar la clase a la ya existente, sólo puede utilizar el signo "+ =" prefijo. Para eliminar una clase, utilizar el "- =" prefijo de la siguiente manera:</p>
<p className="it"> <em>Nota: hay algunas propiedades relacionados con CSS que no Tween como filtros de IE, pero eso es una <strong>muy</strong> rara excepción. También, hay una penalización de velocidad leve cuando se utiliza className porque el motor necesita bucle a través de todas las propiedades css para analizar cuáles son diferentes.</em></p>
<p className="it"><a name="controlling"></a></p>
<p className="it">La mayoría de las otras herramientas de animación ofrecen controles muy limitadas, pero GSAP fue construido desde cero para ser un conjunto robusto de calidad profesional de herramientas de animación. Puede hacer una pausa con facilidad (), resume () inversa (), restart (), seek (), o incluso alterar la escala de tiempo de cualquier interpolación. De hecho, se puede interpolar la escala de tiempo de otro Tween para frenar poco a poco hacia abajo o acelerarlo. Para controlar una interpolación, sin embargo, se necesita una instancia de trabajar. El a (), a partir de (), y Juntas () todos los métodos devolver una instancia, por lo que se puede volcar en una variable tan fácilmente como:</p>
<p className="it"> A continuación, puede llamar a cualquiera de sus métodos: </p>
<p className="it"> También puede matar a todos los preadolescentes de un elemento / objetivo particular de esta manera: </p>
<p className="it">Consulte la <a class="" href="/docs/#/HTML5/GSAP/TweenLite/" target="_self">documentación TweenLite</a> para obtener detalles sobre todas las propiedades y métodos disponibles.<a name="sequencing"></a></p>
<p className="it">A diferencia de la mayoría de las otras herramientas de animación JS, secuenciación en GSAP es mucho más flexible que la construcción de una cola de los preadolescentes que se ejecutan una sola después de los otros. Usted tiene el control completo sobre el tiempo relativo de cada uno de Tween - pueden solaparse tanto como usted desee. Y se puede controlar secuencias enteras en su conjunto, revertir sin problemas en cualquier momento y saltar a cualquier punto, ajustar la escala de tiempo, etc., y todo lo que hace que en el orden correcto. <a href="/sequence-video/">Vea este vídeo</a> para una demostración visual que muestra cómo TimelineLite le puede ahorrar mucho tiempo. Por supuesto, se podría secuenciar preadolescentes utilizando el "retardo" propiedad especial en todos sus preadolescentes, pero que puede complicarse cuando se construye una secuencia larga y más tarde desea cambiar el tiempo de algo pronto en la secuencia (que tendría que ajustar todos los valores de retardo en preadolescentes después de eso). Además de que sería un dolor para controlar toda la secuencia, como para hacer una pausa () o reanudar () o hacia atrás () el grupo en la marcha. La secuenciación es mucho más fácil con TimelineLite y su hermano mayor, TimelineMax. Vayamos a un código de ejemplo:</p>
<p className="it">Piense en una línea de tiempo (como en un TimelineLite o instancia TimelineMax) como una colección de tweens que están posicionadas en lugares específicos sobre que línea de tiempo. Se controla su reproducción. Líneas de tiempo se pueden anidar dentro de otras líneas de tiempo tan profundamente como usted quiera. Este es un concepto muy potente, ya que le permite controlar secuencias enteras de una manera modular. Imagínese 100 caracteres animación de forma individual en su lugar de forma escalonada (100 preadolescentes). Podrían todos pueden agrupar en una instancia TimelineLite y luego controlados en su conjunto (utilizando métodos comunes como Pausa (), resume (), reverse (), restart (), etc.). De hecho, se podría crear funciones que devuelven animaciones envueltos en una TimelineLite de modo que usted puede construir fácilmente una animación más grande, más compleja de una manera modular. Un concepto fundamental para entender es que cada Tween se inserta en una línea de tiempo. Por defecto, es la raíz de tiempo dentro del motor. Cuando una línea de tiempo está jugando, avanza en su cabeza lectora virtual. Si se invierte () una línea de tiempo, la cabeza lectora se desplaza en la dirección opuesta de vuelta hacia su comienzo. Como cabeza lectora de la línea de tiempo se encuentra con preadolescentes, que los reproduce en consecuencia. Por ejemplo, si la cabeza lectora se posiciona a mitad de camino a través de una interpolación, que tween rendirá como si está terminado 50%. Si timeScale de la línea de tiempo se establece en 0,5, que haría que la cabeza lectora se desplace a la mitad de velocidad. En consecuencia, cualquier preadolescentes que encuentra también aparecerían a progresar a media velocidad. Una vez que el cuelgue de cómo funcionan las líneas de tiempo, <strong>que puede revolucionar su flujo de trabajo de animación</strong> . Al igual que los preadolescentes, líneas de tiempo juegan inmediatamente por defecto, pero se puede hacer una pausa en ellos inicialmente utilizando <code>pause()</code>o estableciendo <code>paused:true</code>en el parámetro VARS del constructor. Hay algunos métodos bastante disponibles en las clases de línea que le dan un control preciso, y animo a mirar a través de la <a class="" href="/docs/#/HTML5/GSAP/TimelineLite/" target="_self">documentación TimelineLite</a> para ver lo que está disponible. Si usted puede pensar en algo que te gusta hacer, lo más probable es que hay una manera de hacerlo.<a name="tweenmax"></a></p>
<p className="it">Tamaño de archivo apretada, un rendimiento excepcional, y una característica relativamente robusto establecer prioridades estaban todos en TweenLite y TimelineLite pero hubo algunas características adicionales que queríamos añadir sin inflar los componentes principales. Introduzca TweenMax y TimelineMax. TweenMax extiende TweenLite, haciendo todo lo que hace más extras como repetición, yoyo, repeatDelay, y mucho más. TimelineMax hace lo mismo para TimelineLite. Además, cuando se carga el archivo JavaScript TweenMax, también incluye un montón de extras de forma automática como CSSPlugin, RoundPropsPlugin, BezierPlugin, AttrPlugin, DirectionalRotationPlugin, TimelineLite, TimelineMax y EasePack. Básicamente, si el tamaño del archivo es una preocupación importante para usted, seguir con TweenLite y cargar manualmente Cualquiera que sea plugins o alivia necesita. De lo contrario, utilice TweenMax, ya que ofrece la característica final que se propuso con las mínimas molestias. TweenMax usa exactamente la misma sintaxis que TweenLite. De hecho, una instancia TweenMax <strong>es</strong> una instancia TweenLite. Si usted tiene un proyecto que ya esté usando TweenLite, literalmente, podría hacer una búsqueda y reemplazo para todas las instancias "TweenLite" con "TweenMax" y que sería un gran trabajo. TweenMax solo reconoce algunas propiedades especiales adicionales, por ejemplo:</p>
<p className="it"> TimelineMax también ofrece la repetición, yoyo, y repeatDelay así como los métodos convenientes como tweenTo (), currentLabel (), getLabelBefore () y getLabelAfter () y más. </p>
<p className="it"> <a name="overwriting"></a></p>
<p className="it">Un aspecto a menudo se pasa por alto de la interpolación es cómo (y si y cuándo) tweens sobrescriben otros tweens del mismo objeto. Por ejemplo, digamos que usted tiene un botón con onmouseover y onmouseout manipuladores que interpolar su mayor opacidad en el evento "sobre" y menor en el evento "fuera". Para complicar más las cosas, digamos que el "sobre" Tween dura 2 segundos y el "fuera" Tween tiene una duración de 1 segundo. Lo que debería ocurrir si el usuario se da la vuelta de entrada / salida / sobre / fuera rápidamente? Ver el problema? Si se permite que los preadolescentes para funcionar sin ningún tipo de sobreescritura, van a construir y luchan entre sí (uno tratando de interpolar el mayor opacidad, y la otra inferior). En este ejemplo, cuando el usuario se da la vuelta, a 2 segundos tween sería empezar a aumentar la opacidad a 1, pero si el usuario salió de 0,2 segundos más tarde, otro tween comenzaría, haciendo que la opacidad a disminuir. Cuando eso termina Tween 1 segundo después, el "sobre" Tween está todavía en curso (ya que tuvo una duración de 2 segundos), por lo que la opacidad de repente salta hacia arriba y terminar en un valor de 1 a pesar de que el usuario puso en marcha! No se preocupe. Te tenemos cubierto. Por defecto, cada vez que un ejemplo TweenLite hace por primera vez (después de cualquier retardo), se analizan todos los demás tweens activos de la misma diana y controles para las propiedades de la superposición individuales. Si encuentra alguno, que mata las superposiciones ofensivos (de nuevo, sólo las propiedades individuales). Este modo de sobreescritura se llama <code>"auto"</code>y es típicamente el más intuitivo. Sin embargo, puede haber ocasiones en las que desea que el nuevo Tween para matar todos los otros preadolescentes de un mismo objeto, independientemente de sus horas de inicio o propiedades que se solapan. Eso es lo que el <code>"all"</code>modo de sobreescritura es para. Y para saltar sobrescribir por completo, se puede definir un modo de sobreescritura de <code>"none"</code>. Hay varios otros modos para elegir también, así que echa un vistazo a los documentos completos para más detalles. Se define un modo de sobreescritura con el "sobrescribir" propiedad especial como este:</p>
<p className="it">Por supuesto que puede matar manualmente todas las interpolaciones de un objeto en particular mediante el <code>TweenLite.killTweensOf()</code>método, pero lo bueno de definir los modos de sobreescritura es que la sobreescritura no entran en juego hasta que sea necesario (cuando la interpolación hace por primera vez), que es esencial cuando se trabaja con secuencias complejas.<a name="faq"></a></p>
<p className="it">Obtener un pase de acceso a los plugins de primera calidad, ofertas, y más!</p>
<p className="it">Diagnosite describe sus servicios con una historia divertida animación. Gran ejemplo y la cantidad justa de talento toman este sitio aparentemente simple al siguiente nivel.</p>
<p className="it">Gran sitio usando GSAP</p>
<p className="it">Cartera de escalador agencia interactiva.</p>
<p className="it">Ver el exclusivo re-lanzamiento de la primera colección al aire libre por el maestro del diseño italiano Gae Aulenti. el uso de la diversión ThrowPropsPlugin y se pueden arrastrar. <p className="it">Dos fotógrafos, dos lugares, y 12 horas de la fotografía. Por lo menos una inyección cada 30 minutos. transiciones muy inteligente.</p>
<p className="it">Una galería de efectos alucinantes desde premiado animador Shane Mielke. Asegúrese de hacer clic todos los iconos inferiores.</p>
<p className="it">ilustraciones dibujados a mano cobran vida a través de este sitio de la Mente Diseño. Una delicia visual espera en cada página.</p>
<p className="it">Cartera de Richard Rodrigues</p>
<p className="it">Una colección de demos maravillosamente animadas e interactivas de Make Me PULSE agencia. Asegúrese de seguir las instrucciones muy sencillas.</p>
<p className="it">Este sitio está completamente lleno con la animación SVG increíble. Aprender acerca de los préstamos de negocios nunca ha sido más agradable.</p>
<p className="it">La vía rápida habilidades de animación HTML5 de su equipo con Capacitación GreenSock Empresa</p>
<p className="it">Conocer las bases de GSAP JS rápido. El comienzo del salto le guiará a través de una serie de diapositivas interactivas que le mostrará exactamente cómo funciona GSAP JS. Animación con JavaScript acaba de conseguir mucho más fácil.</p>
<p className="it">CSSPlugin de GSAP está súper cargado de manejar algunas nuevas propiedades de CSS3 resbaladizas como 3D transforma, boxShadow, textShadow, borderRadius y el clip. Además, usted no tiene que preocuparse por una larga lista de prefijos de proveedores. GSAP hace que sea fácil crear efectos de próxima generación en la actualidad.</p>
<p className="it">Este video le guía a través de algunos problemas comunes que los animadores profesionales se enfrentan todos los días y le muestra cómo TimelineLite de GSAP fuerza a estos desafíos con facilidad. </p>
<p className="it">Ahora vamos a comenzar a recibir las últimas actualizaciones GreenSock, ofertas exclusivas, y más en tu correo electrónico. Bienvenido a bordo.</p>
<p className="it">pluma código</p>
<p className="it">GitHub</p>
<p className="it">Facebook</p>
<p className="it">Google+</p>
<p className="it">LinkedIn</p>
<p className="it">Gorjeo</p>
<p className="it">Obtener un pase de acceso a los plugins de primera calidad, ofertas, y más!</p>
<p className="it">Recibe las últimas actualizaciones de los productos GreenSock, ofertas exclusivas, y más en tu correo electrónico.</p>
<p className="it">Su información siempre se mantendrá confidencial.</p>
<p className="it">Copiar / pegar el código en el código HTML:</p>
<p className="it">Mediante el uso de código de GreenSock, usted acepta los <a href="/standard-license/">términos de uso</a> .</p>
<p className="it">pluma código</p>
<p className="it">GitHub</p>
<p className="it">Facebook</p>
<p className="it">Google+</p>
<p className="it">LinkedIn</p>
<p className="it">Gorjeo</p>
<p className="it">GreenSock ayudar a apoyar al convertirse en un miembro</p>
<p className="it">It is never a bad time for an upgrade</p>